<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wcWGw/ZSzugzAAAAABJRU5ErkJggg==
</value>
  </data>
</root>